schedules:
  - cron: 42 0 * * *
    displayName: Nightly Image Sync
    always: true
    branches:
      include:
        - main

jobs:
  - job: sync
    displayName: Sync
    strategy:
      matrix:
        Alpine:
          image: alpine
        CentOS:
          image: centos
        Fedora:
          image: fedora
        Nginx:
          image: nginx
        openSUSE:
          image: opensuse/leap
        Ubuntu:
          image: ubuntu

    steps:
      - script: ./write-auth.py
        displayName: Create auth
        env:
          DOCKER_TOKEN: $(DOCKER_TOKEN)
          QUAY_TOKEN: $(QUAY_TOKEN)

      - script: >
          docker run --rm -t
          -v $(pwd)/auth.json:/auth.json:ro
          quay.io/containers/skopeo:v1.2.0
          sync
          --authfile /auth.json
          --src docker
          --dest docker
          docker.io/$(image)
          quay.io/bedrock
        displayName: Image

  - job: sync_yaml
    displayName: Sync Filtered
    strategy:
      matrix:
        Python:
          image: python
          regexp: '^[0-9]+\.[^-]+$'
        GoLang:
          image: golang
          regexp: '\d+-stretch'

    steps:
      - script: ./write-auth.py $(image)
        displayName: Create auth
        env:
          DOCKER_USER: $(DOCKER_USER)
          DOCKER_TOKEN: $(DOCKER_TOKEN)
          QUAY_TOKEN: $(QUAY_TOKEN)

      - script: ./write-yaml.py
        displayName: Create YAML
        env:
          DOCKER_USER: $(DOCKER_USER)
          DOCKER_PASSWORD: $(DOCKER_PASSWORD)
          IMAGE: $(image)
          REGEXP: '$(regexp)'

      - script: >
          docker run --rm -t
          -v $(pwd)/auth.json:/auth.json:ro
          -v $(pwd)/images.yml:/images.yml:ro
          quay.io/containers/skopeo:v1.2.0
          sync
          --authfile /auth.json
          --src yaml
          --dest docker
          /images.yml
          quay.io/bedrock
        displayName: Image
